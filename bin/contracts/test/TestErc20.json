{
    "contractName": "TestErc20",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/data/Projects/mtv/memetaverse-contracts/contracts/test/TestErc20.sol\":\"TestErc20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/data/Projects/mtv/memetaverse-contracts/contracts/test/TestErc20.sol\":{\"keccak256\":\"0x7cd4c30978519c3f7b936dc89639a1155b790a7dbf0d34b846a6f07478b4b683\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2a16feeb1351ed777f598d9efae5ade1cea9524f45f91577f916da925a60d3a\",\"dweb:/ipfs/QmTkEfqhQTzKQbSfopztH7qrKdqfvRGFF93z2gbP8NUWSd\"]},\"/data/Projects/mtv/memetaverse-contracts/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"/data/Projects/mtv/memetaverse-contracts/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"/data/Projects/mtv/memetaverse-contracts/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"/data/Projects/mtv/memetaverse-contracts/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
    "bytecode": "608060405234801561001057600080fd5b5060408051808201825260048082526344454d4f60e01b602080840182905284518086019095529184529083015290600361004b83826100ff565b50600461005882826100ff565b5050506101be565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061008a57607f821691505b6020821081036100aa57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156100fa57600081815260208120601f850160051c810160208610156100d75750805b601f850160051c820191505b818110156100f6578281556001016100e3565b5050505b505050565b81516001600160401b0381111561011857610118610060565b61012c816101268454610076565b846100b0565b602080601f83116001811461016157600084156101495750858301515b600019600386901b1c1916600185901b1785556100f6565b600085815260208120601f198616915b8281101561019057888601518255948401946001909101908401610171565b50858210156101ae5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6109e880620001ce6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461014157806395d89b411461016a578063a0712d6814610172578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101e6565b6040516100ce9190610819565b60405180910390f35b6100ea6100e5366004610883565b610278565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a3660046108ad565b610292565b604051601281526020016100ce565b6100ea61013c366004610883565b6102b6565b6100fe61014f3660046108e9565b6001600160a01b031660009081526020819052604090205490565b6100c16102f5565b61018561018036600461090b565b610304565b005b6100ea610195366004610883565b610311565b6100ea6101a8366004610883565b6103a8565b6100fe6101bb366004610924565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f590610957565b80601f016020809104026020016040519081016040528092919081815260200182805461022190610957565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b6000336102868185856103b6565b60019150505b92915050565b6000336102a08582856104da565b6102ab85858561056c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061028690829086906102f0908790610991565b6103b6565b6060600480546101f590610957565b61030e338261073a565b50565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561039b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102ab82868684036103b6565b60003361028681858561056c565b6001600160a01b0383166104185760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610392565b6001600160a01b0382166104795760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610392565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461056657818110156105595760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610392565b61056684848484036103b6565b50505050565b6001600160a01b0383166105d05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610392565b6001600160a01b0382166106325760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610392565b6001600160a01b038316600090815260208190526040902054818110156106aa5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610392565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106e1908490610991565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161072d91815260200190565b60405180910390a3610566565b6001600160a01b0382166107905760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610392565b80600260008282546107a29190610991565b90915550506001600160a01b038216600090815260208190526040812080548392906107cf908490610991565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156108465785810183015185820160400152820161082a565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461087e57600080fd5b919050565b6000806040838503121561089657600080fd5b61089f83610867565b946020939093013593505050565b6000806000606084860312156108c257600080fd5b6108cb84610867565b92506108d960208501610867565b9150604084013590509250925092565b6000602082840312156108fb57600080fd5b61090482610867565b9392505050565b60006020828403121561091d57600080fd5b5035919050565b6000806040838503121561093757600080fd5b61094083610867565b915061094e60208401610867565b90509250929050565b600181811c9082168061096b57607f821691505b60208210810361098b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561028c57634e487b7160e01b600052601160045260246000fdfea2646970667358221220102b35bb38a1e20a8149f2a0a118368b80782160eda681b68f98dc12fe944dd564736f6c63430008130033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461014157806395d89b411461016a578063a0712d6814610172578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101e6565b6040516100ce9190610819565b60405180910390f35b6100ea6100e5366004610883565b610278565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a3660046108ad565b610292565b604051601281526020016100ce565b6100ea61013c366004610883565b6102b6565b6100fe61014f3660046108e9565b6001600160a01b031660009081526020819052604090205490565b6100c16102f5565b61018561018036600461090b565b610304565b005b6100ea610195366004610883565b610311565b6100ea6101a8366004610883565b6103a8565b6100fe6101bb366004610924565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f590610957565b80601f016020809104026020016040519081016040528092919081815260200182805461022190610957565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b6000336102868185856103b6565b60019150505b92915050565b6000336102a08582856104da565b6102ab85858561056c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061028690829086906102f0908790610991565b6103b6565b6060600480546101f590610957565b61030e338261073a565b50565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561039b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102ab82868684036103b6565b60003361028681858561056c565b6001600160a01b0383166104185760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610392565b6001600160a01b0382166104795760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610392565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461056657818110156105595760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610392565b61056684848484036103b6565b50505050565b6001600160a01b0383166105d05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610392565b6001600160a01b0382166106325760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610392565b6001600160a01b038316600090815260208190526040902054818110156106aa5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610392565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106e1908490610991565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161072d91815260200190565b60405180910390a3610566565b6001600160a01b0382166107905760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610392565b80600260008282546107a29190610991565b90915550506001600160a01b038216600090815260208190526040812080548392906107cf908490610991565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156108465785810183015185820160400152820161082a565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461087e57600080fd5b919050565b6000806040838503121561089657600080fd5b61089f83610867565b946020939093013593505050565b6000806000606084860312156108c257600080fd5b6108cb84610867565b92506108d960208501610867565b9150604084013590509250925092565b6000602082840312156108fb57600080fd5b61090482610867565b9392505050565b60006020828403121561091d57600080fd5b5035919050565b6000806040838503121561093757600080fd5b61094083610867565b915061094e60208401610867565b90509250929050565b600181811c9082168061096b57607f821691505b60208210810361098b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561028c57634e487b7160e01b600052601160045260246000fdfea2646970667358221220102b35bb38a1e20a8149f2a0a118368b80782160eda681b68f98dc12fe944dd564736f6c63430008130033",
    "sourceMap": "169:153:16:-:0;;;201:42;;;;;;;;;-1:-1:-1;1978:113:32;;;;;;;;;;;;-1:-1:-1;;;1978:113:32;;;;;;;;;;;;;;;;;;;;;;;2044:5;:13;1978:113;2044:5;:13;:::i;:::-;-1:-1:-1;2067:7:32;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;169:153:16;;14:127:47;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:47;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:47;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:47;;;2580:26;2531:89;-1:-1:-1;;1335:1:47;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:47;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:47;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:47;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:47:o;:::-;169:153:16;;;;;;",
    "deployedSourceMap": "169:153:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:47;;1162:22;1144:41;;1132:2;1117:18;4433:197:32;1004:187:47;3244:106:32;3331:12;;3244:106;;;1342:25:47;;;1330:2;1315:18;3244:106:32;1196:177:47;5192:286:32;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1853:36:47;;1841:2;1826:18;3093:91:32;1711:184:47;5873:236:32;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:32;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;247:73:16:-;;;;;;:::i;:::-;;:::i;:::-;;6596:429:32;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:32;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:41;4570:32:32;719:10:41;4586:7:32;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;5192:286::-;5319:4;719:10:41;5375:38:32;5391:4;719:10:41;5406:6:32;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:32;;5192:286;-1:-1:-1;;;;5192:286:32:o;5873:236::-;719:10:41;5961:4:32;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:32;;;;;;;;;;5961:4;;719:10:41;6015:66:32;;719:10:41;;6040:27:32;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;247:73:16:-;290:25;296:10;308:6;290:5;:25::i;:::-;247:73;:::o;6596:429:32:-;719:10:41;6689:4:32;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:32;;;;;;;;;;6689:4;;719:10:41;6815:35:32;;;;6807:85;;;;-1:-1:-1;;;6807:85:32;;3355:2:47;6807:85:32;;;3337:21:47;3394:2;3374:18;;;3367:30;3433:34;3413:18;;;3406:62;-1:-1:-1;;;3484:18:47;;;3477:35;3529:19;;6807:85:32;;;;;;;;;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;3729:189::-;3808:4;719:10:41;3862:28:32;719:10:41;3879:2:32;3883:6;3862:9;:28::i;10123:370::-;-1:-1:-1;;;;;10254:19:32;;10246:68;;;;-1:-1:-1;;;10246:68:32;;3761:2:47;10246:68:32;;;3743:21:47;3800:2;3780:18;;;3773:30;3839:34;3819:18;;;3812:62;-1:-1:-1;;;3890:18:47;;;3883:34;3934:19;;10246:68:32;3559:400:47;10246:68:32;-1:-1:-1;;;;;10332:21:32;;10324:68;;;;-1:-1:-1;;;10324:68:32;;4166:2:47;10324:68:32;;;4148:21:47;4205:2;4185:18;;;4178:30;4244:34;4224:18;;;4217:62;-1:-1:-1;;;4295:18:47;;;4288:32;4337:19;;10324:68:32;3964:398:47;10324:68:32;-1:-1:-1;;;;;10403:18:32;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;1342:25:47;;;10454:32:32;;1315:18:47;10454:32:32;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:32;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:32;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:32;;4569:2:47;11019:68:32;;;4551:21:47;4608:2;4588:18;;;4581:30;4647:31;4627:18;;;4620:59;4696:18;;11019:68:32;4367:353:47;11019:68:32;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:32;;7606:68;;;;-1:-1:-1;;;7606:68:32;;4927:2:47;7606:68:32;;;4909:21:47;4966:2;4946:18;;;4939:30;5005:34;4985:18;;;4978:62;-1:-1:-1;;;5056:18:47;;;5049:35;5101:19;;7606:68:32;4725:401:47;7606:68:32;-1:-1:-1;;;;;7692:16:32;;7684:64;;;;-1:-1:-1;;;7684:64:32;;5333:2:47;7684:64:32;;;5315:21:47;5372:2;5352:18;;;5345:30;5411:34;5391:18;;;5384:62;-1:-1:-1;;;5462:18:47;;;5455:33;5505:19;;7684:64:32;5131:399:47;7684:64:32;-1:-1:-1;;;;;7830:15:32;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:32;;5737:2:47;7855:72:32;;;5719:21:47;5776:2;5756:18;;;5749:30;5815:34;5795:18;;;5788:62;-1:-1:-1;;;5866:18:47;;;5859:36;5912:19;;7855:72:32;5535:402:47;7855:72:32;-1:-1:-1;;;;;7961:15:32;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:32;8067:4;-1:-1:-1;;;;;8058:26:32;;8077:6;8058:26;;;;1342:25:47;;1330:2;1315:18;;1196:177;8058:26:32;;;;;;;;8095:37;11795:121;8415:389;-1:-1:-1;;;;;8498:21:32;;8490:65;;;;-1:-1:-1;;;8490:65:32;;6144:2:47;8490:65:32;;;6126:21:47;6183:2;6163:18;;;6156:30;6222:33;6202:18;;;6195:61;6273:18;;8490:65:32;5942:355:47;8490:65:32;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:32;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:32;;1342:25:47;;;-1:-1:-1;;;;;8701:37:32;;;8718:1;;8701:37;;1330:2:47;1315:18;8701:37:32;;;;;;;8415:389;;:::o;14:548:47:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:47;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:47:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:47:o;2091:180::-;2150:6;2203:2;2191:9;2182:7;2178:23;2174:32;2171:52;;;2219:1;2216;2209:12;2171:52;-1:-1:-1;2242:23:47;;2091:180;-1:-1:-1;2091:180:47:o;2276:260::-;2344:6;2352;2405:2;2393:9;2384:7;2380:23;2376:32;2373:52;;;2421:1;2418;2411:12;2373:52;2444:29;2463:9;2444:29;:::i;:::-;2434:39;;2492:38;2526:2;2515:9;2511:18;2492:38;:::i;:::-;2482:48;;2276:260;;;;;:::o;2541:380::-;2620:1;2616:12;;;;2663;;;2684:61;;2738:4;2730:6;2726:17;2716:27;;2684:61;2791:2;2783:6;2780:14;2760:18;2757:38;2754:161;;2837:10;2832:3;2828:20;2825:1;2818:31;2872:4;2869:1;2862:15;2900:4;2897:1;2890:15;2754:161;;2541:380;;;:::o;2926:222::-;2991:9;;;3012:10;;;3009:133;;;3064:10;3059:3;3055:20;3052:1;3045:31;3099:4;3096:1;3089:15;3127:4;3124:1;3117:15",
    "sourcePath": "/data/Projects/mtv/memetaverse-contracts/contracts/test/TestErc20.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.19+commit.7dd6d404"
    },
    "ast": {
        "absolutePath": "/data/Projects/mtv/memetaverse-contracts/contracts/test/TestErc20.sol",
        "exportedSymbols": {
            "Context": [
                8066
            ],
            "ERC20": [
                6395
            ],
            "IERC20": [
                6473
            ],
            "IERC20Metadata": [
                6498
            ],
            "TestErc20": [
                3668
            ]
        },
        "id": 3669,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 3644,
                "literals": [
                    "solidity",
                    ">=",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:24:16"
            },
            {
                "absolutePath": "/data/Projects/mtv/memetaverse-contracts/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "file": "/data/Projects/mtv/memetaverse-contracts/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 3645,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 3669,
                "sourceUnit": 6396,
                "src": "58:109:16",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 3646,
                            "name": "ERC20",
                            "nameLocations": [
                                "191:5:16"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6395,
                            "src": "191:5:16"
                        },
                        "id": 3647,
                        "nodeType": "InheritanceSpecifier",
                        "src": "191:5:16"
                    }
                ],
                "canonicalName": "TestErc20",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 3668,
                "linearizedBaseContracts": [
                    3668,
                    6395,
                    6498,
                    6473,
                    8066
                ],
                "name": "TestErc20",
                "nameLocation": "178:9:16",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 3654,
                            "nodeType": "Block",
                            "src": "237:6:16",
                            "statements": []
                        },
                        "id": 3655,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "44454d4f",
                                        "id": 3650,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "221:6:16",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_44bdb2e6b4da239bb3168a28c10fd8f7e1c306661f791896d263493bb701dd61",
                                            "typeString": "literal_string \"DEMO\""
                                        },
                                        "value": "DEMO"
                                    },
                                    {
                                        "hexValue": "44454d4f",
                                        "id": 3651,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "229:6:16",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_44bdb2e6b4da239bb3168a28c10fd8f7e1c306661f791896d263493bb701dd61",
                                            "typeString": "literal_string \"DEMO\""
                                        },
                                        "value": "DEMO"
                                    }
                                ],
                                "id": 3652,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 3649,
                                    "name": "ERC20",
                                    "nameLocations": [
                                        "215:5:16"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 6395,
                                    "src": "215:5:16"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "215:21:16"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 3648,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "212:2:16"
                        },
                        "returnParameters": {
                            "id": 3653,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "237:0:16"
                        },
                        "scope": 3668,
                        "src": "201:42:16",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 3666,
                            "nodeType": "Block",
                            "src": "284:36:16",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 3661,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "296:3:16",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 3662,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "300:6:16",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "296:10:16",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 3663,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3657,
                                                "src": "308:6:16",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 3660,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6212,
                                            "src": "290:5:16",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 3664,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "290:25:16",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 3665,
                                    "nodeType": "ExpressionStatement",
                                    "src": "290:25:16"
                                }
                            ]
                        },
                        "functionSelector": "a0712d68",
                        "id": 3667,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mint",
                        "nameLocation": "256:4:16",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 3658,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 3657,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "269:6:16",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3667,
                                    "src": "261:14:16",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 3656,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "261:7:16",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "260:16:16"
                        },
                        "returnParameters": {
                            "id": 3659,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "284:0:16"
                        },
                        "scope": 3668,
                        "src": "247:73:16",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 3669,
                "src": "169:153:16",
                "usedErrors": []
            }
        ],
        "src": "32:290:16"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "mint(uint256)": "a0712d68",
        "name()": "06fdde03",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "507200",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24628",
            "balanceOf(address)": "2540",
            "decimals()": "266",
            "decreaseAllowance(address,uint256)": "26966",
            "increaseAllowance(address,uint256)": "infinite",
            "mint(uint256)": "infinite",
            "name()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "2326",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite"
        }
    }
}